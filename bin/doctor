#! /bin/bash

# This is Vimo's doctor. It will tell you if your system needs to install
# something in order for Vimo to work.
#
# It checks for:
# - git
# - vim 8
# - .vim/tmp directory
# - vim plug
# - ag (the silver searcher)
# - ctags (optional)
# - Source Code Pro font (optional)

# ========================================
# state
# ========================================
errors=()
warns=()
CURRENT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
DOCUMENTATION_DIR="$(realpath "$CURRENT_DIR/../doc/cli")"

# ========================================
# helper functions
# ========================================
ok() {
  printf "  - OK: %s" "$1"
  echo ""
}

fail() {
  printf "  - ERROR: %s" "$1"
  echo ""
  errors+=("$2")
}

warn() {
  printf "  - WARN: %s" "$1"
  echo ""
  warns+=("$2")
}

hasGit() {
  [[ $(command -v git) ]];
}

hasCTags() {
  [[ $(command -v ctags) ]];
}

hasVim8() {
  [[ "$(vim --version | sed -n '/Vi IMproved 8\./p')" =~ Vi\ IMproved\ 8\.[0-9]+ ]];
}

hasAnyVim() {
  [[ "$(command -v vim)" ]];
}

hasVimPlug() {
  [[ -e "$HOME/.vim/autoload/plug.vim" ]];
}

hasVimTempDir() {
  [[ -e "$HOME/.vim/tmp" ]];
}

hasFontConfig() {
  [[ $(command -v fc-list) ]];
}

hasAg() {
  [[ $(command -v ag) ]];
}

printDocumentation() {
  echo ""
  echo ""

  for error in $1
  do
    cat "$DOCUMENTATION_DIR/${error}_instructions.txt"
  done
}

# Start of script
# ========================================
echo "===================================="
echo "     Vimo - Batteries-included"
echo "      configuration for Vim!"
echo "===================================="
echo "* Running Doctor..."
echo ""

# Check for git
if hasGit
then
  ok "Git"
else
  fail "Git" "git"
fi

# Check for Vim 8
if hasVim8
then
  ok "Vim 8"
else
  if hasAnyVim
  then
    fail "Vim 8" "vim_update"
  else
    fail "Vim 8" "vim"
  fi
fi

# Ctags
if hasCTags
then
  ok "CTags"
else
  warn "CTags" "ctags"
fi

# Vim-Plug
if hasVimPlug
then
  ok "Vim Plug"
else
  fail "Vim Plug" "vim_plug"
fi

# Vim temp dir, used for swap files
if hasVimTempDir
then
  ok "~/.vim/tmp/"
else
  if [[ $(mkdir -p "$HOME/.vim/tmp") ]];
  then
    ok "~/.vim/tmp/"
  else
    fail "Vim's tmp folder" "vim_tmp_dir"
  fi
fi

# Check for ag
if hasAg
then
  ok "ag (the silver searcher)"
else
  fail "ag (the silver searcher)" "ag"
fi

# Check for font
checkForGuiFont() {
  if fc-list | grep -q "Source Code Pro"
  then
    ok "Font installed (Source Code Pro)"
  else
    warn "Source Code Pro" "source_code_pro"
  fi
}

if hasFontConfig
then
  checkForGuiFont
else
  warn "fontconfig" "fontconfig"
fi

# Display errors
if [[ ${#errors[@]} -gt 0 ]];
then
  printDocumentation "${errors[@]}"
  exit 1
fi

# Display warnings
if [[ ${#warns[@]} -gt 0 ]];
then
  printDocumentation "${warns[@]}"
fi

echo ""
