" [LanguageClient]
" Interact with the language like an IDE:
"
" * Smart rename
" * Go to definition
" * Get identifier info
" * Etc, see https://github.com/autozimu/LanguageClient-neovim for more

if(exists('g:vimo#layers#languageclient#disabled') && g:vimo#layers#languageclient#disabled)
  finish
endif

":setting Default location for `solarpath`:
if !exists("g:vimo#solargraph_path")
  let g:vimo#solargraph_path = 'solargraph'
endif

if has('win32')
  Plug 'autozimu/LanguageClient-neovim', {
      \ 'branch': 'next',
      \ 'do': 'powershell -executionpolicy bypass -File install.ps1',
      \ }
else
  Plug 'autozimu/LanguageClient-neovim', {
      \ 'branch': 'next',
      \ 'do': 'bash install.sh',
      \ }
endif

let g:LanguageClient_serverCommands = {
    \ 'ruby':       [g:vimo#solargraph_path, 'stdio'],
    \ }

function LC_maps()
  if has_key(g:LanguageClient_serverCommands, &filetype)
    ":mapping Documentation
    nnoremap <silent> <leader>ld :call LanguageClient#textDocument_hover()<CR>
    ":mapping Go to definition
    nnoremap <silent> <leader>lg :call LanguageClient#textDocument_definition()<CR>
    ":mapping Rename
    nnoremap <silent> <leader>lr :call LanguageClient#textDocument_rename()<CR>
  endif
endfunction

autocmd FileType * call LC_maps()

" vim:ft=vim
