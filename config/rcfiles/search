" [ SEARCH ]
" Key bindings
"
"     <leader>sc
"       Clear the search highlight
"       NORMAL MODE
"
"     <leader>ss
"       Search text under cursor or selection in files with same filetype (eg: only Ruby files)
"       If there is no specified `filetype`, it runs on all files
"       NORMAL MODE / VISUAL MODE
"
"     <leader>sa
"       Search text under cursor or selection in All files (slow)
"       NORMAL MODE / VISUAL MODE
"
"     <leader>sr
"       Search and Replace. It allows for replacing the search term from the
"       last search. Example usage:
"
"         1. Use "<leader>ss" to search for the word under the cursor.
"         2. Use "<leader>srPotato" to replace the world with Potato. 
"            You will be prompted for each replacement. These are not saved.
"            You can save-all with ":bufdo update".
"
"       NORMAL MODE / VISUAL MODE
"

" highlight as you type kind of search -- if a pattern contains an uppercase
" letter, match for case sensitive, otherwise, match for case-insensitive
set incsearch
set hlsearch
set ignorecase
set smartcase       

" clear search higlight in normal mode
nnoremap <leader>sc :noh<CR>

" show next matched string at the center of the screen
nnoremap n nzz
nnoremap N Nzz

" the default glob matches all files, this gets overriden in each filetype
" plugin to scan for certain extentions, see `ftplugin/ruby` for an example.
let g:default_search_glob="**/*"

function SearchIn(glob)
  if a:glob != ""
    let glob = a:glob
  elseif expand("%:e") != ""
    let glob = "**/*." . expand("%:e")
  else
    let glob = g:default_search_glob
  endif

  execute "noautocmd vimgrep /" . escape(@s, '/') . "/j " . glob
endfunction

function ReplaceMatch()
  call inputsave()
  let replacewith = input("Replace with: ")
  call inputrestore()

  if replacewith == ""
    return
  endif

  execute "cdo %s/" . escape(@", '/') . "/" . replacewith . "/cge"
endfunction

" search all -- use `s` register and yank stuff there, then just call the
" `SearchIn` function.
vnoremap <leader>sa "sy:call SearchIn("**/*")<CR>:cw<CR>
nnoremap <leader>sa "syiw:call SearchIn("**/*")<CR>:cw<CR>

" search by filetype
vnoremap <leader>ss "sy:call SearchIn("")<CR>:cw<CR>
nnoremap <leader>ss "syiw:call SearchIn("")<CR>:cw<CR>

" replace searched term in search result
nnoremap <leader>sr :call ReplaceMatch()<CR>

" vim:ft=vim
